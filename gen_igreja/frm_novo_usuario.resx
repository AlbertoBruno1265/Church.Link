<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_limpar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAbQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAbQAAAAAAAAAAAAAAAAAAAAAAAACAKD5U/1B8qf9QfKn/UHyp/1B8qf9QfKn/UHyp/1B8
        qf9QfKn/UHyp/1B8qf9QfKn/UHyp/1B8qf9QfKn/UHyp/1B8qf9QfKn/UHyp/1B8qf9QfKn/UHyp/1B8
        qf9QfKn/UHyp/yg+VP8AAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAoPlT/UHyp/1B8qf9QfKn/UHyp/1B8
        qf9QfKn/UHyp/1B8qf9QfKn/UHyp/1B8qf9QfKn/UHyp/1B8qf9QfKn/UHyp/1B8qf9QfKn/UHyp/1B8
        qf9QfKn/UHyp/1B8qf9QfKn/KD5U/wAAAIAAAAAAAAAAAAAAAAAAAABxAAAAxA4WIP8cLEH/HCxB/xws
        Qf8cLEH/HCxB/xwsQf8cLEH/HCxB/xwsQf8cLEH/HCxB/xwsQf8cLEH/HCxB/xwsQf8cLEH/HCxB/xws
        Qf8cLEH/HCxB/xwsQf8cLEH/HCxB/xwsQf8OFiD/AAAAxAAAAHEAAAAAAAAAAAAAAP8rQlr/K0Ja/ytC
        Wv8rQlr/K0Ja/ytCWv8rQlr/K0Ja/ytCWv8rQlr/K0Ja/ytCWv8rQlr/K0Ja/ytCWv8rQlr/K0Ja/ytC
        Wv8rQlr/K0Ja/ytCWv8rQlr/K0Ja/ytCWv8rQlr/K0Ja/ytCWv8rQlr/AAAA/wAAAAAAAAAAAAAA/yU6
        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
        AAHwAwAB8AMAAfgDAAH//wAB//8AAf////8=
</value>
  </data>
</root>